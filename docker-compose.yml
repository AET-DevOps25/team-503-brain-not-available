volumes:
  mariadb_data:
  grafana-storage:

services:
  client:
    image: ghcr.io/aet-devops25/frontend:latest
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: "client"
    restart: always
    networks:
      - app_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=PathPrefix(`/`)"
      - "traefik.http.routers.client.entrypoints=web"
      - "traefik.http.services.client.loadbalancer.server.port=80"

  server:
    image: ghcr.io/aet-devops25/backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: "server"
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://database:3306/backend_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rand528PASS-wd
    depends_on:
      - database
    networks:
      - app_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.server.entrypoints=web"
      - "traefik.http.services.server.loadbalancer.server.port=1111"
      - "traefik.http.middlewares.strip-api-path.stripprefix.prefixes=/api"
      - "traefik.http.routers.server.middlewares=strip-api-path@docker"

  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "18080:8080"  # Optional: Dashboard
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
    networks:
      - app_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  database:
    image: mariadb:10.7
    container_name: "database"
    restart: always
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - app_network
    environment:
      MARIADB_ROOT_PASSWORD: rand528PASS-wd
      MARIADB_DATABASE: backend_db
    ports:
      - "3306:3306"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: "phpmyadmin"
    ports:
      - "8088:80"
    environment:
      PMA_HOST: database
      MYSQL_ROOT_PASSWORD: rand528PASS-wd
      UPLOAD_LIMIT: 500M
    networks:
      - app_network
    depends_on:
      - database

  gpt4all:
    image: ghcr.io/aet-devops25/gpt4all:latest
    container_name: "gpt4all"
    build:
      context: ./genai/gpt4all
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    networks:
      - app_network

  weaviate:
    image: ghcr.io/aet-devops25/weaviate:latest
    container_name: "weaviate"
    build:
      context: ./genai/weaviate
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "50051:50051"
    networks:
      - app_network

  prometheus:
    image: ghcr.io/aet-devops25/prometheus:latest
    container_name: "prometheus"
    build:
      context: ./monitoring/prometheus
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    networks:
      - app_network

  grafana:
    image: ghcr.io/aet-devops25/grafana:latest
    container_name: "grafana"
    build:
      context: ./monitoring/grafana
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app_network
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - app_network

networks:
  app_network:
    driver: bridge